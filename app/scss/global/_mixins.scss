@mixin border-box{
	box-sizing: border-box;
}
@mixin content-box{
	box-sizing: content-box;
}


$desktop-width: 768px;
$mobile-max-width: 767px;

@mixin mobile {
  @media (max-width: #{$mobile-max-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin smoothFont{
	text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-smoothing: antialiased;
    -webkit-font-smoothing: antialiased;
}

@mixin transitions-ease($timing){
	        transition: all $timing cubic-bezier(.3,0,.2,1);
}
@mixin ease-long-transform($timing){
	
	        transition: all $timing cubic-bezier(.165,.84,.44,1);
}

@mixin transitions-bounce($timing){
	
	        transition: all $timing cubic-bezier(.3,0,.2,3);
}

@mixin ease-target($target, $timing){
	
	        transition: $target $timing cubic-bezier(.3,0,.2,1);
}

@mixin transform-origin($X, $Y){
	transform-origin: $X $Y;
}

@mixin translate($Xmove, $Ymove){
	transform: translate($Xmove, $Ymove);
}

@mixin rotate($degs){
	transform: rotate($degs);
}

@mixin skew($degs){
            transform: skew($degs)
}

@mixin translate-rotate($Xmove, $Ymove, $degs){
	transform: translate($Xmove, $Ymove) rotate($degs);
}

@mixin translate-scale($Xmove, $Ymove, $Xscale, $Yscale){
	transform: translate($Xmove, $Ymove) scale($Xscale, $Yscale);
}

@mixin scale($X, $Y){
	transform: scale($X, $Y);
}

@mixin flexIt{
	display: flex;
}

@mixin flex-direction($direction){
	@if $direction == vertical {
		flex-direction: column;
	}

	@else {
		flex-direction: row;
	}
}

@mixin flex-spacebetween{
	justify-content: space-between;
}

@mixin flex-alignCenter{
	align-items: center;
}

@mixin flex-grow($ratio){
	flex-grow: $ratio;
}

@mixin flex-stretch{
	align-items: stretch;
}
@mixin flexself-stretch{
	align-self: stretch;
}

@mixin unselectable{
	user-select: none;
}







